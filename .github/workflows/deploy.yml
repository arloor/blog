name: Deploy

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  all:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Checkout gh-pages
      uses: actions/checkout@v4
      with:
        ref: gh-pages
        path: gh-pages
    - name: Set outputs
      id: vars
      run: echo "sha_short=$(git rev-parse --short=8 HEAD)" >> $GITHUB_OUTPUT
    - name: prepare
      run: |
        hugoVersion="0.96.0"
        hugoURL=https://github.com/gohugoio/hugo/releases/download/v${hugoVersion}/hugo_extended_${hugoVersion}_Linux-64bit.tar.gz
        sudo apt install -y tar curl
        mkdir /tmp/hugo
        curl -Lf "$hugoURL" -o /tmp/hugo/hugo.tar.gz
        tar -zxf /tmp/hugo/hugo.tar.gz -C /tmp/hugo/
        install /tmp/hugo/hugo /usr/local/bin/
    - name: deploy
      run: |
        hugo -d gh-pages
        cd gh-pages
        ls 
        echo ============
        ls ../
        git config --global user.email "admin@arloor.com"
        git config --global user.name "arloor"
        git add .
        git commit -m "${{ steps.vars.outputs.sha_short }}"
        git push
        echo
    - name: install ssh keys
      run: |
        install -m 600 -D /dev/null ~/.ssh/id_rsa
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        ssh-keyscan -H ${{ secrets.SSH_HOST }} > ~/.ssh/known_hosts
    - name: connect and pull
      run: |
        ssh root@${{ secrets.SSH_HOST }} '
          mkdir -p /usr/share/nginx/html;
          if [ ! -d /usr/share/nginx/html/blog ];then 
            git clone https://github.com/arloor/blog.git -b gh-pages /usr/share/nginx/html/blog;
          else
            if [ -d /usr/share/nginx/html/blog/.git ];then
              cd /usr/share/nginx/html/blog;
              git checkout gh-pages;
              git pull --rebase;
            else
              echo "blog目录存在，但不是git仓库，重新clone";
              rm -rf /usr/share/nginx/html/blog;
              git clone https://github.com/arloor/blog.git -b gh-pages /usr/share/nginx/html/blog;
            fi
          fi 
          '
    - name: cleanup
      run: rm -rf ~/.ssh