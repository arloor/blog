name: Deploy

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  all:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set outputs
      id: vars
      run: echo "sha_short=$(git rev-parse --short=8 HEAD)" >> $GITHUB_OUTPUT
    - name: prepare
      run: |
        if ! git clone https://github.com/arloor/blog.git  --depth=1 --single-branch -b gh-pages public; 
        then
          echo first time, create gh-pages branch
          mkdir public
          cd public
          git init
          git checkout --orphan gh-pages
          git remote add origin https://github.com/arloor/blog.git
        fi
        hugoVersion="0.96.0"
        hugoVersion="0.121.1"
        hugoURL=https://github.com/gohugoio/hugo/releases/download/v${hugoVersion}/hugo_extended_${hugoVersion}_Linux-64bit.tar.gz
        sudo apt install -y tar curl
        mkdir /tmp/hugo
        curl -Lf "$hugoURL" -o /tmp/hugo/hugo.tar.gz
        tar -zxf /tmp/hugo/hugo.tar.gz -C /tmp/hugo/
        install /tmp/hugo/hugo /usr/local/bin/
        hugo -d public
    - name: Deploy
      run: |
        cd public
        git config --global user.name "arloor"
        git config --global user.email "admin@arloor.com"
        git -P diff --color=always
        if  git add . && git commit --allow-empty -m "update" && git push origin gh-pages -f 
        then 
          echo successfully pushed
        else
          echo nothing to commit or failed to push
        fi 
    - name: install ssh keys
      run: |
        install -m 600 -D /dev/null ~/.ssh/id_rsa
        echo "${{ secrets.SSH_PRIVATE_KEY }}" >> ~/.ssh/id_rsa
        for i in ${{ secrets.SSH_HOST }};do
          echo "add ${i} to known_hosts"
          ssh-keyscan -H ${i} >> ~/.ssh/known_hosts
        done
    # - name: connect and pull
    #   run: |
    #     for i in ${{ secrets.SSH_HOST }};do
    #       echo "connect to ${i}";
    #       ssh root@${i} '
    #           mkdir -p /usr/share/nginx/html;
    #           if [ ! -d /usr/share/nginx/html/blog -o ! -d /usr/share/nginx/html/blog/.git ];then 
    #             echo "blog目录不存在/不是git仓库，clone";
    #             rm -rf /usr/share/nginx/html/blog;
    #             git clone https://github.com/arloor/blog.git -b gh-pages /usr/share/nginx/html/blog;
    #           else
    #             echo "blog目录存在，是git仓库，pull";
    #             cd /usr/share/nginx/html/blog;
    #             git reset --hard  > /dev/null;
    #             git checkout gh-pages  > /dev/null;
    #             git reset --hard  > /dev/null;
    #             git pull --rebase || {
    #               echo "git pull 失败，重新clone"
    #               cd ..
    #               rm -rf blog;
    #               git clone https://github.com/arloor/blog.git -b gh-pages /usr/share/nginx/html/blog;
    #             }
    #             git -P log -1 -p --color=always --pretty=oneline;
    #           fi 
    #         '
    #     done
    - name: cleanup
      run: rm -rf ~/.ssh
