name: Deploy

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  all:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: 'recursive'
    - name: Set outputs
      id: vars
      run: echo "sha_short=$(git rev-parse --short=8 HEAD)" >> $GITHUB_OUTPUT
    - name: Set up gh-pages branch
      env:
        GH_TOKEN: ${{ github.token }}
      run: |
        rm -rf public
        git config --global user.name "arloor"
        git config --global user.email "admin@arloor.com"
        if ! gh repo clone arloor/blog public -- --depth=1 --single-branch -b gh-pages;
        then
          echo first time, create gh-pages branch
          mkdir public
          cd public
          git init
          git checkout --orphan gh-pages
          git remote add origin https://github.com/arloor/blog.git
          cd ..
        fi
    - name: Setup Hugo
      uses: peaceiris/actions-hugo@v3
      with:
          hugo-version: 'latest'
          extended: true
    # - name: setup hugo
    #   run: |
    #     hugoVersion="0.135.0"
    #     hugoURL=https://github.com/gohugoio/hugo/releases/download/v${hugoVersion}/hugo_extended_${hugoVersion}_Linux-64bit.tar.gz
    #     sudo apt-get install -y tar curl
    #     mkdir /tmp/hugo
    #     curl -Lf "$hugoURL" -o /tmp/hugo/hugo.tar.gz
    #     tar -zxf /tmp/hugo/hugo.tar.gz -C /tmp/hugo/
    #     install /tmp/hugo/hugo /usr/local/bin/
    - name: hugo build
      run: |
        hugo -d public
    - name: commit and push
      env:
        GH_TOKEN: ${{ github.token }}
      run: |
        cd  public
        git config url.https://arloor:${{ github.token }}@github.com/.insteadOf https://github.com/
        git config user.name "arloor"
        git config user.email "admin@arloor.com"
        git add .&&git commit -m "updates from ${{ steps.vars.outputs.sha_short }}" && git push -u origin gh-pages -f || echo "nothing to commit"
    # - name: Deploy
    #   uses: peaceiris/actions-gh-pages@v3
    #   with:
    #     github_token: ${{ secrets.GITHUB_TOKEN }}
    #     publish_dir: ./public
    - name: install ssh keys
      run: |
        install -m 600 -D /dev/null ~/.ssh/id_rsa
        echo "${{ secrets.SSH_PRIVATE_KEY }}" >> ~/.ssh/id_rsa
        for i in ${{ secrets.SSH_HOST }};do
          echo "add ${i} to known_hosts"
          ssh-keyscan -H ${i} >> ~/.ssh/known_hosts
        done
    - name: connect and deploy
      run: |
        for i in ${{ secrets.SSH_HOST }};do
        echo "connect to ${i}";
        ssh root@${i} '
            mkdir -p /usr/share/nginx/html;
            if [ ! -d /usr/share/nginx/html/blog -o ! -d /usr/share/nginx/html/blog/.git ];then 
              echo "blog目录不存在/不是git仓库，clone";
              rm -rf /usr/share/nginx/html/blog;
              git clone https://github.com/arloor/blog.git --depth=1 -b gh-pages /usr/share/nginx/html/blog;
              exit $?; # 退出ssh，并将返回值传递给github actions
            else
              echo "blog目录存在，是git仓库，pull";
              cd /usr/share/nginx/html/blog;
              git reset --hard  > /dev/null;
              git checkout gh-pages  > /dev/null;
              git reset --hard  > /dev/null;
              head=$(git rev-parse HEAD);
              git pull --ff-only && {
                newHead=$(git rev-parse HEAD);
                if [ "$head" = "$newHead" ];then
                  echo "git pull 没有发现变更";
                else
                  echo "最新变更如下：";
                  git -P log -1 -p --color=always --pretty=oneline -- posts ':!posts/index.html' ':!posts/index.xml' |head -n 100;
                fi
              } || {
                echo "git pull 失败，重新clone"
                cd ..
                rm -rf blog;
                git clone https://github.com/arloor/blog.git --depth=1 -b gh-pages /usr/share/nginx/html/blog;
                cd blog;
              }
              exit $?; # 退出ssh，并将返回值传递给github actions
            fi 
          '
        done
    - name: cleanup
      run: |
        rm -rf ~/.ssh
        rm -rf ~/.gitconfig